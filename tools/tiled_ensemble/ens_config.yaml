pipeline:
  seed: 42
  accelerator: "cpu"
  default_root_dir: "results"

  ensemble:
    tiling:
      tile_size: [128, 256]
      stride: 128

    post_processing:
      normalization_stage: image # on what level we normalize, options: [tile, image, none]
      threshold_stage: image # stage at which we apply threshold, options: [tile, image]
      seam_smoothing:
        apply: True # if this is applied, area around tile seams are is smoothed
        sigma: 2 # sigma of gaussian filter used to smooth this area
        width: 0.1 # width factor, multiplied by tile dimension gives the region width around seam which will be smoothed

  model:
    class_path: Padim

  #  trainer:
  #    max_epochs: 500
  #    callbacks:
  #      - class_path: lightning.pytorch.callbacks.EarlyStopping
  #        init_args:
  #          patience: 1
  #          monitor: pixel_AUROC
  #          mode: max

  metrics:
    pixel: AUROC

  data:
    class_path: anomalib.data.MVTec
    init_args:
      root: ../datasets/MVTec
      category: bottle
      train_batch_size: 32
      eval_batch_size: 32
      num_workers: 0
      task: segmentation
      transform: null
      train_transform: null
      eval_transform: null
      test_split_mode: from_dir
      test_split_ratio: 0.2
      val_split_mode: same_as_test
      val_split_ratio: 0.5
      image_size: [256, 256]
